<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.simsim.modules.survey.SurveyMapper">

    <resultMap id="resultMapObj" type="com.simsim.modules.survey.Survey"></resultMap>
    
    <sql id="selectCommon">
		FROM jsSurveyRecord a
		WHERE 1=1
			<choose>
				<when test="shOption ==1">AND (SELECT nickname FROM jsMember c WHERE c.seq = a.jsMember_seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==2">AND (SELECT id FROM jsMember c WHERE c.seq = a.jsMember_seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==3">AND (SELECT survey FROM jsSurveyName b WHERE b.snSeq = a.jsSurveyName_snSeq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==4">AND (SELECT resultTitle From jsSurveyResult d WHERE d.srSeq = a.jsSurveyResult_srSeq) LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</sql>
	
	<!-- <when test="shOption ==1">AND codeGroupCode = #{shValue}</when> -->
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
			SELECT
				snSeq
				,survey
			    ,surveyPhrase
			FROM jsSurveyName
			WHERE 1=1
				<choose>
					<when test="shValue != null">AND survey LIKE CONCAT('%',#{shValue},'%')</when>
				</choose>
			<include refid="Base.orderByLimitForMysql"></include>
		<include refid="Base.selectListLowerForMysql"></include>
	</select>
	
	<select id="getListNum" resultType="Integer">
		SELECT
			COUNT(*)
		FROM jsSurveyName
		WHERE 1=1
			<choose>
				<when test="shValue != null">AND survey LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</select>

	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.snSeq
			,a.survey
			,a.surveyPhrase
			,a.surveyExplain
		   <!--  b.question,
		    b.questionContent,
		    c.choice,
		    c.choiceContent -->
		FROM jsSurveyName a
		<!-- inner join jsSurveyQuestion b on b.jsSurveyName_snSeq = a.snSeq
		inner join jsQuestionChoice c on b.sqSeq = c.jsSurveyQuestion_sqSeq -->
		WHERE 1=1
			AND a.snSeq=#{snSeq}
	</select>
	
	<select id="selectSurveyCommentCount" resultType="Integer">
		SELECT COUNT(*)
		From jsSurveyComment
		WHERE 1=1
			AND snSeq = #{snSeq}
			AND delNy = 0
	</select>
	
	<select id="selectSurveyCommentList" resultMap="resultMapObj">
	SELECT
		scSeq
		,nickname
		,seq
		,commentContent
		,datetime
	FROM jsSurveyComment
	WHERE 1=1 
		AND snSeq = #{snSeq}
		AND delNy = 0
		order by scSeq DESC
	</select>
	
	<!-- 관리자 댓글관리 탭 S -->
	<select id="selectCommentList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
			SELECT
				scSeq
				,snSeq
				,nickname
				,seq
				,commentContent
				,datetime
				,delNy
			FROM jsSurveyComment a
			WHERE 1=1
			<choose>
				<when test="shOption ==1">AND (SELECT nickname FROM jsMember c WHERE c.seq = a.seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==2">AND (SELECT id FROM jsMember c WHERE c.seq = a.seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==3">AND (SELECT survey FROM jsSurveyName b WHERE b.snSeq = a.snSeq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==4">AND commentContent LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
			order by scSeq DESC
			<include refid="Base.orderByLimitForMysql"></include>
		<include refid="Base.selectListLowerForMysql"></include>
	</select>
	
	<select id="getCommentNum" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM jsSurveyComment a
		WHERE 1=1
			<choose>
				<when test="shOption ==1">AND (SELECT nickname FROM jsMember c WHERE c.seq = a.seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==2">AND (SELECT id FROM jsMember c WHERE c.seq = a.seq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==3">AND (SELECT survey FROM jsSurveyName b WHERE b.snSeq = a.snSeq) LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption ==4">AND commentContent LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</select>
	<!-- 관리자 댓글관리 탭 E -->
	
	<select id="selectContentRecordCount" resultType="Integer">
		SELECT
			count(*)
		<include refid="selectCommon"></include>
		<!-- <choose>
			<when test="shRegiMod ==0">AND datetime <![CDATA[>= "#{shdateStart}" AND datetime <=]]> "#{shdateEnd}"</when>
		</choose> -->
	</select>
	
	<select id="selectContentRecordList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
			SELECT
				srcSeq
				,(SELECT nickname FROM jsMember c WHERE c.seq = a.jsMember_seq) as nickname
				,(SELECT id FROM jsMember c WHERE c.seq = a.jsMember_seq) as id
				,(SELECT survey FROM jsSurveyName b WHERE b.snSeq = a.jsSurveyName_snSeq) as survey
				,totalScore
				,(SELECT resultTitle From jsSurveyResult d WHERE d.srSeq = a.jsSurveyResult_srSeq) as resultTitle
				,datetime
			<include refid="selectCommon"></include>
			<!-- <choose>
				<when test="shRegiMod ==0">
					<![CDATA[
					AND datetime >= "#{shdateStart}"
					AND datetime <= "#{shdateEnd}"
					]]>
				</when>
			</choose> -->
			order by srcSeq DESC
			<include refid="Base.orderByLimitForMysql"></include>
		<include refid="Base.selectListLowerForMysql"></include>
	</select>
	
	<insert id="CommentInst">
		INSERT INTO jsSurveyComment(
			seq
			,snSeq
			,nickname
			,commentContent
			,delNy
		)
		VALUES(
			#{seq}
			,#{snSeq}
			,#{nickname}
			,#{commentContent}
			,0
		)
		<selectKey resultType="String" keyProperty="scSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="CommentUpdt">
		UPDATE jsSurveyComment
		SET
			commentContent =#{commentContent}
		WHERE 1=1
			AND scSeq = #{scSeq}
	</update>
	
	<update id="CommentVele">
		Update jsSurveyComment
		SET
			delNy = 1
		WHERE
			scSeq = #{scSeq}
	</update>

	<!-- 유저 인터페이스 s-->
	<select id="countUserRecord" resultType="Integer">
		SELECT
			COUNT(*)
		FROM jsSurveyRecord a
		inner join jsMember b on b.seq = a.jsMember_seq 
			AND b.seq = #{seq}
	</select>
	
	<select id="selectUserRecord" resultMap="resultMapObj">
<!-- 		SELECT 
		a.srcSeq,
	    d.survey,
	    b.nickname,
	    c.resultTitle,
	    a.datetime
	FROM jsSurveyRecord a
	inner join jsMember b on b.seq = a.jsMember_seq 
	<![CDATA[
	inner join jsSurveyResult c on c.scoreRangeStart <= a.totalScore AND c.scoreRangeEnd >= a.totalScore
	]]>
	inner join jsSurveyName d on d.snSeq = a.jsSurveyName_snSeq
		AND b.seq = #{seq} -->
		<include refid="Base.selectListUpperForMysql"></include>
			SELECT 
				a.srcSeq
			    ,(SELECT survey FROM jsSurveyName d WHERE d.snSeq = a.jsSurveyName_snSeq) as survey
			    ,nickname
			    <![CDATA[
			    ,(SELECT resultTitle FROM jsSurveyResult c WHERE c.scoreRangeStart <= a.totalScore AND c.scoreRangeEnd >= a.totalScore AND a.jsSurveyName_snSeq = c.jsSurveyName_snSeq) as resultTitle
			    ]]>
			    ,a.datetime
			FROM jsSurveyRecord a
				inner join jsMember b on b.seq = a.jsMember_seq 
				AND b.seq = #{seq}
				order by srcSeq DESC
			<include refid="Base.orderByLimitForMysql"></include>
		<include refid="Base.selectListLowerForMysql"></include>
	</select>

	<select id="countMyComment" resultType="Integer">
		SELECT
			COUNT(*)
		FROM jsSurveyComment a
		inner join jsMember b on b.seq = a.snSeq
		inner join jsSurveyName c on c.snSeq = a.snSeq
		WHERE 1=1
			AND a.seq =#{seq}
			AND a.delNy = 0
		order by scSeq DESC
	</select>	
	
	<select id="selectMyComment" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
			SELECT
				a.scSeq,
				a.snSeq
			    ,c.survey,
			    a.nickname,
			    a.commentContent,
			    a.datetime
			FROM jsSurveyComment a
			inner join jsMember b on b.seq = a.snSeq
			inner join jsSurveyName c on c.snSeq = a.snSeq
			WHERE 1=1
				AND a.seq =#{seq}
				AND a.delNy = 0
			order by scSeq DESC
			<include refid="Base.orderByLimitForMysql"></include>
		<include refid="Base.selectListLowerForMysql"></include>
	</select>
	
	<select id="selectSurveyContentQuestion" resultMap="resultMapObj">
		SELECT
			b.sqSeq
			,a.survey
		    ,b.question
		    ,b.questionContent
		FROM jsSurveyName a
		inner join jsSurveyQuestion b on b.jsSurveyName_snSeq = a.snSeq
		AND snSeq=#{snSeq}
	</select>
	
	<select id="selectSurveyContentChoice" resultMap="resultMapObj">
		SELECT
			a.survey
		    ,c.jsSurveyQuestion_sqSeq as sqSeq
			,c.choice
			,c.choiceContent
			,c.choiceScore
		FROM jsSurveyName a
		inner join jsSurveyQuestion b on b.jsSurveyName_snSeq = a.snSeq
		inner join jsQuestionChoice c on c.jsSurveyQuestion_sqSeq = b.sqSeq
		AND snSeq=#{snSeq}
	</select>
	
	<insert id="insertSurveySelected">
		INSERT INTO jsSurveySelected(
			jsSurveyRecord_srcSeq
			,ssQuestion
			,ssChoosed
		)
		VALUES (
			#{srcSeq}
			,#{ssQuestion}
			,#{ssChoosed}
		)
		<selectKey resultType="String" keyProperty="ssSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="insertSurveyRecord">
		INSERT INTO jsSurveyRecord(
			jsMember_seq
			,jsSurveyName_snSeq
			,totalScore
			,jsSurveyResult_srSeq
		)
		VALUES (
			#{seq}
			,#{snSeq}
			,0
			,0
		)
		<selectKey resultType="String" keyProperty="srcSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="getTotalScore" resultType="Integer">
		SELECT 
			sum(a.choiceScore) 
		FROM jsQuestionChoice a 
		inner join jsSurveyRecord c on srcSeq = #{srcSeq}
		inner join jsSurveySelected b on  c.srcSeq = b.jsSurveyRecord_srcSeq
		inner join jsSurveyQuestion d on b.ssQuestion = d.question
		WHERE 1=1 
		AND c.jsSurveyName_snSeq = d.jsSurveyName_snSeq 
		AND d.sqSeq = a.jsSurveyQuestion_sqSeq 
		AND a.choice = b.ssChoosed 
	</select>
	
	<select id="getsrSeq" resultType="Integer">
		SELECT 
			srSeq
		FROM jsSurveyResult c
		<![CDATA[ 
		inner join jsSurveyRecord a on c.scoreRangeStart <= a.totalScore AND c.scoreRangeEnd >= a.totalScore
		]]>
		WHERE 1=1 
		AND a.jsSurveyName_snSeq = c.jsSurveyName_snSeq 
		AND a.srcSeq = #{srcSeq}
	</select>
	
	<update id="totalScoreUpdt">
		UPDATE jsSurveyRecord
		SET
			totalScore = #{totalScore}
		WHERE 1=1
			AND srcSeq=#{srcSeq}
	</update>
	
	<update id="srSeqUpdt">
		UPDATE jsSurveyRecord
		SET
			jsSurveyResult_srSeq = #{srSeq}
		WHERE 1=1
			AND srcSeq=#{srcSeq}
	</update>
	
	<select id="selectResultList" resultMap="resultMapObj">
	SELECT
		srSeq
		,jsSurveyName_snSeq
		,resultNum
		,resultTitle
		,resultSmTitle
		,resultContent
		,relation1
		,relation2
	FROM jsSurveyResult 
	WHERE 1=1
	AND jsSurveyname_snSeq = #{snSeq}
	</select>
	
	<select id="selectCurrentRecord" resultMap="resultMapObj" >
		SELECT
			srcSeq
			,jsMember_seq as seq
			,jsSurveyName_snSeq as snSeq
			,totalScore
			,jsSurveyResult_srSeq as srSeq
			,datetime
		FROM jsSurveyRecord
		WHERE 1=1
			AND srcSeq=#{srcSeq}
	</select>
	
	
	<!-- 유저 인터페이스 e-->
	<!-- 테스트 내용 작성 s -->
	<insert id="insertSurveyName">
		INSERT INTO jsSurveyName(
			survey
			,surveyPhrase
			,surveyExplain
			,openNy
		)
		VALUES (
			#{survey}
			,#{surveyPhrase}
			,#{surveyExplain}
			,#{openNy}
		)
		<selectKey resultType="String" keyProperty="snSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="insertSurveyQuestion">
		INSERT INTO jsSurveyQuestion(
			jsSurveyname_snSeq
			,question
			,questionContent
		)
		VALUES(
			#{snSeq}
			,#{question}
			,#{questionContent}
		)
		<selectKey resultType="String" keyProperty="sqSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="insertChoice">
		INSERT INTO jsQuestionChoice(
			jsSurveyQuestion_sqSeq
			,choice
			,choiceContent
			,choiceScore
		)
		VALUES(
			#{sqSeq}
			,#{choice}
			,#{choiceContent}
			,#{choiceScore}
		)
		<selectKey resultType="String" keyProperty="sqcSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="insertResult">
		INSERT INTO jsSurveyResult(
			jsSurveyName_snSeq
			,resultNum
			,resultTitle
			,resultContent
			,scoreRangeStart
			,scoreRangeEnd
			,relation1
			,relation2
		)
		VALUES(
			#{snSeq}
			,#{resultNum}
			,#{resultTitle}
			,#{resultContent}
			,#{scoreRangeStart}
			,#{scoreRangeEnd}
			,#{relation1}
			,#{relation2}
		)
		<selectKey resultType="String" keyProperty="srSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	<!-- 테스트 내용 작성 e -->
	
	<!-- 테스트 내용 ViewMod S -->
	<!-- 테스트 제목은 기존 sql 활용 -->
	
	<select id="getQuestionListForSurvey" resultMap="resultMapObj">
		SELECT
			sqSeq
			,jsSurveyName_snSeq as snSeq
			,question
			,questionContent
		FROM jsSurveyQuestion
		WHERE 1=1
			AND jsSurveyName_snSeq=#{snSeq}
	</select>
	
	<select id="getChoiceListForSurvey" resultMap="resultMapObj">
		SELECT
		    a.snSeq
		    ,c.sqcSeq
			,c.jsSurveyQuestion_sqSeq
			,c.choice
			,c.choiceContent
			,c.choiceScore
		FROM jsSurveyName a
		inner join jsSurveyQuestion b on b.jsSurveyName_snSeq = a.snSeq
		inner join jsQuestionChoice c on c.jsSurveyQuestion_sqSeq = b.sqSeq
		WHERE 1=1
			AND jsSurveyName_snSeq=#{snSeq}
	</select>
	
	<select id="getResultListForSurvey" resultMap="resultMapObj">
		SELECT
			jsSurveyName_snSeq as snSeq
			,srSeq
			,resultNum
			,resultTitle
			,resultContent
			,scoreRangeStart
			,scoreRangeEnd
			,relation1
			,relation2
		FROM jsSurveyResult
		WHERE 1=1
			AND jsSurveyName_snSeq=#{snSeq}
	</select>
	
	<!-- 테스트 내용 ViewMod E -->
	
	<select id="selectImgList" resultMap="resultMapObj">
	SELECT
		seq
		,pseq
		,type
		,sort
		,path
		,originalName
		,uuidName
		,ext
		,size
		,delNy
	FROM Upload
	WHERE 1=1
		<if test="snSeq != null and !snSeq.equals('')">AND pseq=#{snSeq}</if>
	</select>
	
	<select id="getSurveyNum" resultType="Integer">
		SELECT
			COUNT(*)
		FROM jsSurveyName
		WHERE 1=1
	</select>
	
	<select id="getTodayNewComment" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM jsSurveyComment
		WHERE 1=1
			AND datetime >= curdate()
	</select>
	
</mapper>